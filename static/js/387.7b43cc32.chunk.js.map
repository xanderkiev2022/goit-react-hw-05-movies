{"version":3,"file":"static/js/387.7b43cc32.chunk.js","mappings":"kRAEaA,EAAUC,EAAAA,GAAAA,IAAH,wCAIPC,EAAOD,EAAAA,GAAAA,GAAH,yHAOJE,EAAOF,EAAAA,GAAAA,GAAH,yLAYJG,EAASH,EAAAA,GAAAA,EAAH,iEAKNI,EAAYJ,EAAAA,GAAAA,KAAH,sF,SCzBP,SAASK,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAU,mCAAG,WAAML,GAAN,2FAETM,EAAAA,EAAAA,IAAaN,GAASO,MAAK,SAAAC,GAAG,OAAIJ,EAAgBI,EAApB,IAFrB,sDAIfC,QAAQC,IAAR,MAJe,wDAAH,sDAYhB,OAJAC,EAAAA,EAAAA,YAAU,WACRN,EAAWL,EACZ,GAAE,CAACA,KAGF,SAACP,EAAD,WACE,SAACE,EAAD,UACGQ,EAAaS,OACZT,EAAaU,KAAI,SAAAC,GACf,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,UAASmB,KACT,uBAAIC,MAFKF,EAKd,KAED,SAACjB,EAAD,WACE,qDAMX,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  width: 100%;\n  margin-bottom: 15px;\n  padding: 5px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Author = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const NoInfoDiv = styled.span`\n  margin-top: 15px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import { fetchReviews } from 'service/moviesApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Wrapper, List, Item, Author, NoInfoDiv } from './Reviews.styled';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  const getReviews = async movieId => {\n    try {\n      await fetchReviews(movieId).then(res => setMovieReviews(res));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <List>\n        {movieReviews.length ? (\n          movieReviews.map(review => {\n            const { id, author, content } = review;\n            return (\n              <Item key={id}>\n                <Author>{author}</Author>\n                <p>{content}</p>\n              </Item>\n            );\n          })\n        ) : (\n          <NoInfoDiv>\n            <p>There are no reviews</p>\n          </NoInfoDiv>\n        )}\n      </List>\n    </Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","List","Item","Author","NoInfoDiv","Reviews","movieId","useParams","useState","movieReviews","setMovieReviews","getReviews","fetchReviews","then","res","console","log","useEffect","length","map","review","id","author","content"],"sourceRoot":""}